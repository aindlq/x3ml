<?xml version="1.0" encoding="UTF-8"?>
<generator_policy>
   <generator name="MultiHashingGenerator" prefix="prefix" type="any">
      <custom generatorClass="gr.forth.MultiHashingGenerator">
         <set-arg name="hierarchy"/>
         <set-arg name="object_HASHED_CONTENTS"/>
         <set-arg name="term_simple"/>
      </custom>
   </generator>
   <generator name="MultiHashingGeneratorVocab" prefix="vocab" type="any">
      <custom generatorClass="gr.forth.MultiHashingGenerator">
         <set-arg name="hierarchy"/>
         <set-arg name="object_HASHED_CONTENTS"/>
         <set-arg name="term_simple"/>
      </custom>
   </generator>
   <generator name="URIwithGernsheimTypeAndId" prefix="gernsheim" type="any">
      <pattern>{id}</pattern>
   </generator>
   <generator name="IIIF_Generator" prefix="iiif_image" type="any">
      <pattern>{id}{postfix}</pattern>
   </generator>
   <generator name="JSON_Generator" prefix="iiif_json" type="any">
      <pattern>{id}{postfix}</pattern>
   </generator>
   <generator name="namedgraph" prefix="prefix" type="any">
      <pattern>{type}/{id}/graph</pattern>
   </generator>
   <generator name="URIwithType" prefix="prefix" shorten="yes" type="any">
      <pattern>{type}/{id}</pattern>
   </generator>
   <generator name="URIwithTypeAndId" prefix="prefix" type="any">
      <pattern>{type}/{id}</pattern>
   </generator>
   <generator name="URIwithVocabType" prefix="vocab" shorten="yes" type="any">
      <pattern>{type}/{id}</pattern>
   </generator>
   <generator name="URIwithVocabTypeAndId" prefix="vocab" type="any">
      <pattern>{type}/{id}</pattern>
   </generator>
   <generator name="ExhibitionConcatenated" type="any">
      <pattern>Title: {Title}, Place: {Place}, Date: {Date}</pattern>
   </generator>
   <generator name="BiblioConcatenated" type="any">
      <pattern>Title: {Title}, Type: {Type}, Author: {Author}, Date: {Date}</pattern>
   </generator>
   <generator name="PublicationConcatenated" type="any">
      <pattern>Date: {Date}, Publisher: {Publisher}, Place: {Place}</pattern>
   </generator>
   <generator name="ShotConcatenated" type="any">
      <pattern>Date: {Date}, Place: {Place}</pattern>
   </generator>
   <generator name="EventConcatenated" type="any">
      <pattern>Actor: {Actor}, Date: {Date}, Type: {Type}</pattern>
   </generator>
   <generator name="AcquisitionFormerLocation" type="any">
      <pattern>Former Location: {From} Acquisition: {Type} {Date}</pattern>
   </generator>
   <generator name="Attribution" type="any">
      <pattern>{Author} | Reason: {Reason}</pattern>
   </generator>
   <generator name="AcquisitionCurrentLocation" type="any">
      <pattern>Location: {To} Acquisition: {Type} {Date}</pattern>
   </generator>
   <generator name="IdentifierURI" prefix="prefix" shorten="yes" type="any">
      <pattern>{subject_type}/{subject_id}/{identifier_type}/{identifier_id}</pattern>
   </generator>
   <generator name="DimensionURI" prefix="prefix" shorten="yes" type="any">
      <pattern>{subject_type}/{subject_id}/dimension/{type}/{unit}/{value}</pattern>
   </generator>
   <generator name="EventUri" prefix="prefix" type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}</pattern>
   </generator>
   <generator name="ComplexActivityUri" prefix="prefix" type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}/{activityType}</pattern>
   </generator>
   <generator name="Image_Generator" prefix="image" type="any">
      <pattern>{id}{postfix}</pattern>
   </generator>
   <generator name="PropertyTypeUri" prefix="prefix" type="any">
      <pattern>{propertyType}/{domain}/{range}</pattern>
   </generator>
   <generator name="TimespanUri" prefix="prefix" type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}/timespan</pattern>
   </generator>
   <generator name="DateConcatenated" type="any">
      <pattern>{Start} - {End}</pattern>
   </generator>
   <generator name="DimensionConcatenated" type="any">
      <pattern>{length} x {height} {unit}</pattern>
   </generator>
   <generator name="PageUri" prefix="prefix" shorten="yes" type="any">
      <pattern>{resourceType}/{resourceId}/page/{pageId}</pattern>
   </generator>
   <generator name="ComplexTimespanUri"
              prefix="prefix"
              shorten="yes"
              type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}/timespan/{timespan}</pattern>
   </generator>
   <generator name="RelatedDocument" type="any">
      <pattern>{text}: {type}</pattern>
   </generator>
   <generator name="AcquisitionUri" prefix="prefix" shorten="no" type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}/{sequence}</pattern>
   </generator>
   <generator name="RightsUri" prefix="prefix" shorten="yes" type="any">
      <pattern>{resourceType}/{resourceId}/rights/{rights_id}</pattern>
   </generator>
   <generator name="InformationObjectUri"
              prefix="prefix"
              shorten="yes"
              type="any">
      <pattern>{resourceType}/{resourceId}/information_object/{type}/{id}</pattern>
   </generator>
   <generator name="SubjectUri" prefix="prefix" shorten="yes" type="any">
      <pattern>{resourceType}/{resourceId}/subject/{subject_id}</pattern>
   </generator>
   <generator name="VisualItemUri" prefix="prefix" type="any">
      <pattern>{resourceType}/{resourceId}/visual_item</pattern>
   </generator>
   <generator name="PhotoMMFUri" prefix="prefix" shorten="yes" type="any">
      <pattern>photo/{photoId}/{mmf_type}/{id}</pattern>
   </generator>
   <generator name="ComplexEventUri" prefix="prefix" shorten="yes" type="any">
      <pattern>{resourceType}/{resourceId}/{id}/{event_type}</pattern>
   </generator>
   <generator name="FrickPhotoURI" prefix="prefix" shorten="yes" type="any">
      <pattern>photo/{work_id}{count_id}/</pattern>
   </generator>
   <generator name="FrickPhotoLabel" type="any">
      <pattern>{work_id} {count_id}</pattern>
   </generator>
   <generator name="FrickImageURI" prefix="img" type="any">
      <pattern>{id}</pattern>
   </generator>
   <generator name="ConditionURI" prefix="prefix" shorten="yes" type="any">
      <pattern>{resourceType}/{resourceId}/condition/{id}</pattern>
   </generator>
   <generator name="OriginalURI" prefix="original" type="any">
      <pattern>obj{id}</pattern>
   </generator>
   <generator name="SourceRecordVIT" prefix="vit" type="any">
      <pattern>{id}/catalog</pattern>
   </generator>
   <generator name="URIwith2Types" prefix="fot" type="any">
      <pattern>{type1}/{type2}/{id}</pattern>
   </generator>
   <generator name="workIdentifierUri" prefix="fot" type="any">
      <pattern>work/{work_id}/{identifier_type}/{identifier}</pattern>
   </generator>
   <generator name="actorIdentifierUri" prefix="fot" type="any">
      <pattern>actor/{actor_id}/{identifier_type}/{identifier}</pattern>
   </generator>
   <generator name="eventIdentifierUri" prefix="fot" type="any">
      <pattern>{resourceType}/{resourceId}/{eventType}</pattern>
   </generator>
   <generator name="eventLabel" type="any">
      <pattern>{eventType} of {resourceId}</pattern>
   </generator>
   <generator name="subjectVisualItemUri" prefix="fot" type="any">
      <pattern>{resourceType}/{resourceId}/{type}/{id}</pattern>
   </generator>
   <generator name="TypedLiteralGen" type="any">
      <custom generatorClass="gr.forth.TypedLiteralGenerator">
         <set-arg name="text"/>
      </custom>
   </generator>
   <generator name="IIIF_Image_Generator" prefix="iiif_image" type="any">
      <pattern>{id}/{postfix}</pattern>
   </generator>
   <generator name="IIIF_Json_Generator" prefix="iiif_json" type="any">
      <pattern>{id}/info.json</pattern>
   </generator>
   <generator name="URIwithIconclass" prefix="ico" type="any">
      <pattern>{id}</pattern>
   </generator>
   <generator name="URIwithIconclassNamedGraph" prefix="ico" type="any">
      <pattern>{id}/graph</pattern>
   </generator>
   <generator name="LocalTermURI" prefix="pref" type="any">
      <pattern>{hierarchy}/{term}</pattern>
   </generator>
   <generator name="URI" type="any">
      <pattern>{text}</pattern>
   </generator>
   <generator name="URIorUUID" type="any">
      <custom generatorClass="gr.forth.URIorUUID">
         <set-arg name="text"/>
      </custom>
   </generator>
   <generator name="place - city" prefix="prefix" type="any">
      <pattern>place/city/{placeId}</pattern>
   </generator>
   <generator name="place - district" prefix="prefix" type="any">
      <pattern>place/city/{placeId}/district/{districtId}</pattern>
   </generator>
   <generator name="place - city - name" prefix="prefix" type="any">
      <pattern>place/city/{placeId}/id</pattern>
   </generator>
   <generator name="place - district - name" prefix="prefix" type="any">
      <pattern>place/city/{placeId}/district/{districtId}/id</pattern>
   </generator>
   <generator name="vocab with type" prefix="vocab" type="any">
      <pattern>{type}/{id}</pattern>
   </generator>
   <generator name="vocab with type - name" prefix="vocab" type="any">
      <pattern>{type}/{id}/id</pattern>
   </generator>
   <generator name="TimespanUri alternative productions"
              prefix="prefix"
              type="instance"
              uuid="no">
      <pattern>{work}/{id}/{productiontype}/{productionPosition}/timespan</pattern>
   </generator>
   <generator name="mainprod" prefix="prefix" type="any">
      <pattern>{type}/{id}/production</pattern>
   </generator>
   <generator name="mainacq" prefix="prefix" type="any">
      <pattern>{work}/{id}/acquisition</pattern>
   </generator>
   <generator name="timespanAppellation" prefix="prefix" type="any">
      <pattern>{work}/{id}/{prodtype}/{position}/timespan/date</pattern>
   </generator>
   <generator name="timespan" prefix="prefix" type="any">
      <pattern>{work}/{id}/{prodtype}/{position}/timespan</pattern>
   </generator>
   <generator name="collection name" prefix="prefix" type="any">
      <pattern>collection/{name}</pattern>
   </generator>
   <generator name="work" prefix="prefix" type="any">
      <pattern>work/{objId}</pattern>
   </generator>
   <generator name="object - current place" prefix="prefix" type="any">
      <pattern>work/{objId}/place</pattern>
   </generator>
   <generator name="object - former place" prefix="prefix" type="any">
      <pattern>work/{objId}/place/{placeType}/{index}</pattern>
   </generator>
   <generator name="builtwork - part - place - sub_place - name"
              prefix="prefix"
              type="any">
      <pattern>work/{objId}/part/{partId}/place/{subPlaceId}/id</pattern>
   </generator>
   <generator name="builtwork - part - place - sub_place"
              prefix="prefix"
              type="any">
      <pattern>work/{objId}/part/{partId}/place/{subPlaceId}</pattern>
   </generator>
   <generator name="builtwork - part - place" prefix="prefix" type="any">
      <pattern>work/{objId}/part/{partId}/place</pattern>
   </generator>
   <generator name="builtwork - part - name" prefix="prefix" type="any">
      <pattern>work/{objId}/part/{partId}/id</pattern>
   </generator>
   <generator name="builtwork - part" prefix="prefix" type="any">
      <pattern>work/{objId}/part/{partId}</pattern>
   </generator>
   <generator name="builtwork - sub_place - name" prefix="prefix" type="any">
      <pattern>work/{objId}/place/{placeId}/id</pattern>
   </generator>
   <generator name="builtwork - sub_place" prefix="prefix" type="any">
      <pattern>work/{objId}/place/{placeId}</pattern>
   </generator>
   <generator name="builtwork - place" prefix="prefix" type="any">
      <pattern>work/{objId}/place</pattern>
   </generator>
   <generator name="builtwork - name" prefix="prefix" type="any">
      <pattern>work/{objId}/id</pattern>
   </generator>
   <generator name="builtwork" prefix="prefix" type="any">
      <pattern>work/{objId}</pattern>
   </generator>
   <generator name="object - place" prefix="prefix" shorten="true" type="any">
      <pattern>work/{objId}/place/{placeId}</pattern>
   </generator>

   <generator name="object - title" prefix="prefix" type="any">
       <pattern>work/{objId}/title</pattern>
   </generator>

   <generator name="object - alternative title" prefix="prefix" type="any">
       <pattern>work/{objId}/title/{type}/{index}</pattern>
   </generator>

   <generator name="meta type" prefix="prefix" type="any">
       <pattern>vocabulary/meta/{concept}</pattern>
   </generator>

</generator_policy>
